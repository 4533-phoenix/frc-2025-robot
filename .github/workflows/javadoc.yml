name: Deploy Javadoc to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows manual triggering
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write # Needed for Javadoc generation and deployment
  pages: write    # Needed for Pages deployment
  id-token: write # Needed for Pages deployment

# Cancel any in-progress job or run
concurrency:
  group: "pages-${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Generate and Deploy Javadoc
      - uses: MathieuSoysal/Javadoc-publisher.yml@v2.5.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          java-version: 17
          project: gradle
          java-distribution: temurin
          javadoc-source-folder: build/docs/javadoc
          target-folder: .

      # Cache minhtml binary
      - name: Cache minhtml binary
        id: cache-minhtml
        uses: actions/cache@v4
        with:
          path: minhtml
          key: minhtml-0.16.4-${{ runner.os }}
          restore-keys: |
            minhtml-0.16.4-

      # Download minhtml binary if not cached
      - name: Download minhtml binary
        if: steps.cache-minhtml.outputs.cache-hit != 'true'
        run: |
          curl -L -o minhtml https://github.com/wilsonzlin/minify-html/releases/download/v0.16.4/minhtml-0.16.4-x86_64-unknown-linux-gnu
          chmod +x minhtml

      # Define string replacements
      - name: Define string replacements
        id: define-replacements
        run: |
          echo "REPLACEMENTS=s/&nbsp;|&nbsp;//g;s/Package:&nbsp;/<b>Package<\/b>/g;s/<label for=\"search-input\">SEARCH:<\/label>//g;s/Summary:&nbsp;/<b>Summary<\/b>/g;s/Detail:&nbsp;/<b>Detail<\/b>/g" >> $GITHUB_ENV

      # Clean and Minify HTML files
      - name: Clean and Minify HTML files
        env:
          REPLACEMENTS: ${{ env.REPLACEMENTS }}
        run: |
          for file in $(find build/docs/javadoc -name "*.html"); do
            sed -i "$REPLACEMENTS" "$file"
            ./minhtml --keep-closing-tags --minify-css "$file" --output "$file"
            echo "Processed and minified $file"
          done

      # Set up Bun and install csso
      - name: Set up Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo 'export BUN_INSTALL="$HOME/.bun"' >> $GITHUB_ENV
          echo 'export PATH="$BUN_INSTALL/bin:$PATH"' >> $GITHUB_ENV
          source $HOME/.bashrc
          bun install -g csso-cli

      # Minify CSS files using csso
      - name: Minify CSS files
        env:
          PATH: ${{ env.BUN_INSTALL }}/bin:${{ env.PATH }}
        run: |
          for file in $(find build/docs/javadoc -name "*.css"); do
            bun csso "$file" --output "$file"
            echo "Minified $file"
          done

      # Upload the Javadoc as a Pages artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/docs/javadoc

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
